"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Kassets","href":"/Kassets/","docId":"introduction/kassets"},{"type":"link","label":"Overview","href":"/Kassets/introduction/overview","docId":"introduction/overview"}]},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/Kassets/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Quick Start","href":"/Kassets/getting-started/quick-start","docId":"getting-started/quick-start"},{"type":"link","label":"Reactive with UniRx","href":"/Kassets/getting-started/reactive-unirx","docId":"getting-started/reactive-unirx"},{"type":"link","label":"Asynchronous with UniTask","href":"/Kassets/getting-started/async-unitask","docId":"getting-started/async-unitask"},{"type":"link","label":"Pull vs Push Subscription","href":"/Kassets/getting-started/pull-push-subscription","docId":"getting-started/pull-push-subscription"}]},{"type":"category","label":"Kassets Core","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Command","href":"/Kassets/kassets-core/command","docId":"kassets-core/command"},{"type":"link","label":"GameEvent","href":"/Kassets/kassets-core/gameevent","docId":"kassets-core/gameevent"},{"type":"link","label":"Variable","href":"/Kassets/kassets-core/variable","docId":"kassets-core/variable"},{"type":"link","label":"Collection","href":"/Kassets/kassets-core/collection","docId":"kassets-core/collection"},{"type":"link","label":"Transaction","href":"/Kassets/kassets-core/transaction","docId":"kassets-core/transaction"}]},{"type":"category","label":"Fundamentals","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating Kassets\' ScriptableObjects","href":"/Kassets/fundamentals/creating-instances","docId":"fundamentals/creating-instances"},{"type":"link","label":"Using Kassets\' ScriptableObject Instances","href":"/Kassets/fundamentals/referencing","docId":"fundamentals/referencing"},{"type":"link","label":"Base Classes","href":"/Kassets/fundamentals/base-classes","docId":"fundamentals/base-classes"},{"type":"link","label":"Creating Custom Class","href":"/Kassets/fundamentals/creating-custom-class","docId":"fundamentals/creating-custom-class"}]},{"type":"category","label":"Utilities","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Editor Extensions","href":"/Kassets/utilities/editor-extensions","docId":"utilities/editor-extensions"},{"type":"link","label":"JSON Extensions","href":"/Kassets/utilities/json-extension","docId":"utilities/json-extension"}]},{"type":"category","label":"Architecting Projects","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Scriptable Object \\"Architecture\\"","href":"/Kassets/architecting-projects/scriptable-object-architecture","docId":"architecting-projects/scriptable-object-architecture"},{"type":"link","label":"Design Patterns","href":"/Kassets/architecting-projects/design-patterns","docId":"architecting-projects/design-patterns"},{"type":"link","label":"Designing Reusable Modules","href":"/Kassets/architecting-projects/designing-module","docId":"architecting-projects/designing-module"}]}]},"docs":{"architecting-projects/design-patterns":{"id":"architecting-projects/design-patterns","title":"Design Patterns","description":"There are several design patterns that fits well with Scriptable Object Architecture, such as Observer, Command, and some architectural patterns like MVC, MVP, and MVVM.","sidebar":"tutorialSidebar"},"architecting-projects/designing-module":{"id":"architecting-projects/designing-module","title":"Designing Reusable Modules","description":"Modules are a part of a program, that designed to be handle only one task.","sidebar":"tutorialSidebar"},"architecting-projects/scriptable-object-architecture":{"id":"architecting-projects/scriptable-object-architecture","title":"Scriptable Object \\"Architecture\\"","description":"Though named \\"Architecture\\", the Scriptable Object Architecture is not meant to be a system architecture as a whole.","sidebar":"tutorialSidebar"},"fundamentals/base-classes":{"id":"fundamentals/base-classes","title":"Base Classes","description":"Kassets provides default base classes that is usable immediately.","sidebar":"tutorialSidebar"},"fundamentals/creating-custom-class":{"id":"fundamentals/creating-custom-class","title":"Creating Custom Class","description":"Create Custom Class derived from Kassets Core classes are pretty straight forward.","sidebar":"tutorialSidebar"},"fundamentals/creating-instances":{"id":"fundamentals/creating-instances","title":"Creating Kassets\' ScriptableObjects","description":"Create an Event Instance","sidebar":"tutorialSidebar"},"fundamentals/referencing":{"id":"fundamentals/referencing","title":"Using Kassets\' ScriptableObject Instances","description":"Usage on MonoBehavior Script","sidebar":"tutorialSidebar"},"getting-started/async-unitask":{"id":"getting-started/async-unitask","title":"Asynchronous with UniTask","description":"If you had UniTask imported, you can use Asynchronous on Kassets\' instances. First, make sure to import UniTask to your project. Upon import, Kassets will adjust internally to support UniTask using scripting define KASSETSUNITASK. It would normally be defined when UniTask is imported using package manager. If somehow KASSETSUNITASK is undefined, add it to Scripting Define Symbols on Project Settings.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"OpenUPM","sidebar":"tutorialSidebar"},"getting-started/pull-push-subscription":{"id":"getting-started/pull-push-subscription","title":"Pull vs Push Subscription","description":"UniTask v2 has support for Asynchronous LINQ.","sidebar":"tutorialSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Quick Start","description":"Creating Kassets\' ScriptableObjects","sidebar":"tutorialSidebar"},"getting-started/reactive-unirx":{"id":"getting-started/reactive-unirx","title":"Reactive with UniRx","description":"If you had UniRx imported, you can use Reactive on Kassets\' instances. First, make sure to import UniRx to your project. Upon import, Kassets will adjust internally to support UniRx using scripting define KASSETSUNIRX. It would normally be defined when UniRx is imported using package manager. If somehow KASSETSUNIRX is undefined, add it to Scripting Define Symbols on Project Settings.","sidebar":"tutorialSidebar"},"introduction/kassets":{"id":"introduction/kassets","title":"Kassets","description":"Kassets is an implementation of Scriptable Object Architecture.","sidebar":"tutorialSidebar"},"introduction/overview":{"id":"introduction/overview","title":"Overview","description":"Kassets is an event-based system that encourages the use of the Pub/Sub pattern.","sidebar":"tutorialSidebar"},"kassets-core/collection":{"id":"kassets-core/collection","title":"Collection","description":"Collection is a data structure that can contain a number of items.","sidebar":"tutorialSidebar"},"kassets-core/command":{"id":"kassets-core/command","title":"Command","description":"The CommandCore class in Kassets is an implementation of the Command pattern,","sidebar":"tutorialSidebar"},"kassets-core/gameevent":{"id":"kassets-core/gameevent","title":"GameEvent","description":"Event is something that happens within the program execution that requires specific response.","sidebar":"tutorialSidebar"},"kassets-core/transaction":{"id":"kassets-core/transaction","title":"Transaction","description":"Transaction is a two-way event that involves requests and responses.","sidebar":"tutorialSidebar"},"kassets-core/variable":{"id":"kassets-core/variable","title":"Variable","description":"Variable is data stored in a ScriptableObject that can be manipulated.","sidebar":"tutorialSidebar"},"utilities/editor-extensions":{"id":"utilities/editor-extensions","title":"Editor Extensions","description":"Kassets provides a set of editor extensions to help you work with Kassets more efficiently.","sidebar":"tutorialSidebar"},"utilities/json-extension":{"id":"utilities/json-extension","title":"JSON Extensions","description":"Kassets instances that is derived from IVariable can be serialized to JSON format.","sidebar":"tutorialSidebar"}}}')}}]);